
package VIEW;

import bean.*;
import controller.*;
import factory.*;

import java.awt.Color; 
import javax.swing.JButton;
import javax.swing.JOptionPane;


public class menuPrincipal extends javax.swing.JFrame {

        static ListaPessoa users = new ListaPessoa();
        static ListaVacina vacines = new ListaVacina();
        static ListaReacao reactions = new ListaReacao();
        static ListaDoses doses = new ListaDoses();
        
        // para marcar ou desmarcar os botoes 
        public static int qtdCliquesRadReacoesTodas = 0;
        public static int qtdCliquesRadReacoesNenhuma = 0;
        
        // botoes de voltar e avancar
        
        public boolean buttonVoltarIsActive = false;
        public boolean buttonAvancarIsActive = false;
        
        // paginas ativas
        
        public boolean painelAreaPrincipalIsActive = false; 
        public boolean painelAreaCadastroIsActive = false;
        public boolean painelReacoesIsActive = false;
        public boolean painelVacinasIsActive = false;
        public boolean painelPorcentagemVacinadosIsActive = false;
        public boolean painelDosesAplicadasIsActive = false;
        public boolean painelFaixaEtariaIsActive = false;
        
        static Controller c = new Controller();
        
    // constructor
    public menuPrincipal() {
        
        initComponents();
        
        //c.prePreencherListas();
        //c.preencherComUsuarios();
        
        painelPrincipal.setVisible(true);
        painelAreaCadastro.setVisible(false);
        painelReacoes.setVisible(false);
        painelVacinas.setVisible(false);
        painelPorcentagemVacinados.setVisible(false);
        painelDosesAplicadas.setVisible(false);
        painelFaixaEtaria.setVisible(false);
        
        
        btnAvancar.setVisible(false); // comeca como false;
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoRadSexo = new javax.swing.ButtonGroup();
        grupoRadVacinas = new javax.swing.ButtonGroup();
        grupoRadReacoes = new javax.swing.ButtonGroup();
        grupoQtdDosesTomadas = new javax.swing.ButtonGroup();
        grupoQualDoseSofreuReacao = new javax.swing.ButtonGroup();
        jLabel51 = new javax.swing.JLabel();
        painelPrincipal = new javax.swing.JPanel();
        painelOptions = new javax.swing.JPanel();
        btnCadastro = new javax.swing.JButton();
        btnReacoes = new javax.swing.JButton();
        btnVacinas = new javax.swing.JButton();
        btnPorcentagemVacinados = new javax.swing.JButton();
        btnDosesAplicadas = new javax.swing.JButton();
        btnFaixaEtaria = new javax.swing.JButton();
        logoMenu = new javax.swing.JLabel();
        btnAvancar = new javax.swing.JButton();
        lblIconeZeGotas = new javax.swing.JLabel();
        lblTituloPrincipal = new javax.swing.JLabel();
        lblIconeAntiCovid = new javax.swing.JLabel();
        painelAreaCadastro = new javax.swing.JScrollPane();
        painelInformacoesCadastro = new javax.swing.JPanel();
        jPanel = new javax.swing.JPanel();
        lblNomeUsuario = new javax.swing.JLabel();
        lblIdadeUsuario = new javax.swing.JLabel();
        lblSexoUsuario = new javax.swing.JLabel();
        txtNomeUsuario = new javax.swing.JTextField();
        txtIdadeUsuario = new javax.swing.JTextField();
        radMasculino = new javax.swing.JRadioButton();
        radFeminino = new javax.swing.JRadioButton();
        lblBairroUsuario = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblVacinaAplicada = new javax.swing.JLabel();
        radCoronavac = new javax.swing.JRadioButton();
        radAstrazeneca = new javax.swing.JRadioButton();
        radPfizer = new javax.swing.JRadioButton();
        radSputnik = new javax.swing.JRadioButton();
        radJanssen = new javax.swing.JRadioButton();
        radModerna = new javax.swing.JRadioButton();
        lblReacoes = new javax.swing.JLabel();
        radFebre = new javax.swing.JRadioButton();
        radCalafrio = new javax.swing.JRadioButton();
        radDoresNoCorpo = new javax.swing.JRadioButton();
        radDorDeCabeca = new javax.swing.JRadioButton();
        radFadiga = new javax.swing.JRadioButton();
        radFaltaDeAr = new javax.swing.JRadioButton();
        radReacoesTodas = new javax.swing.JRadioButton();
        radReacoesNenhuma = new javax.swing.JRadioButton();
        btnSalvarDados = new javax.swing.JButton();
        lblQtdDosesTomadas = new javax.swing.JLabel();
        radDosesUma = new javax.swing.JRadioButton();
        radDosesDuas = new javax.swing.JRadioButton();
        lblEmQualDoseTeveReacao = new javax.swing.JLabel();
        radQualDosePrimeiraApenas = new javax.swing.JRadioButton();
        radQualDoseSegundaApenas = new javax.swing.JRadioButton();
        radQualDoseAmbasDoses = new javax.swing.JRadioButton();
        radQualDoseNenhuma = new javax.swing.JRadioButton();
        btnVoltarAreaCadastro = new javax.swing.JButton();
        painelReacoes = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblTituloPainelReacoes = new javax.swing.JLabel();
        lblFebre = new javax.swing.JLabel();
        lblCalafrio = new javax.swing.JLabel();
        lblDorNoCorpo = new javax.swing.JLabel();
        lblDorDeCabeca = new javax.swing.JLabel();
        lblFadiga = new javax.swing.JLabel();
        lblFaltaDeAr = new javax.swing.JLabel();
        txtPorcentFebre = new javax.swing.JTextField();
        txtPorcentCalafrio = new javax.swing.JTextField();
        txtPorcentDorNoCorpo = new javax.swing.JTextField();
        txtPorcentDorDeCabeca = new javax.swing.JTextField();
        txtPorcentFadiga = new javax.swing.JTextField();
        txtPorcentFaltaDeAr = new javax.swing.JTextField();
        btnVoltarPainelReacoes = new javax.swing.JButton();
        painelVacinas = new javax.swing.JPanel();
        btnVoltarPainelVacinas = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblTituloPainelVacinas = new javax.swing.JLabel();
        lblCoronavac = new javax.swing.JLabel();
        lblAstrazeneca = new javax.swing.JLabel();
        lblPfizer = new javax.swing.JLabel();
        lblSputnik = new javax.swing.JLabel();
        lblJanssen = new javax.swing.JLabel();
        lblModerna = new javax.swing.JLabel();
        txtPorcentagemCoronavac = new javax.swing.JTextField();
        txtPorcentagemAstrazeneca = new javax.swing.JTextField();
        txtPorcentagemPfizer = new javax.swing.JTextField();
        txtPorcentagemSputnik = new javax.swing.JTextField();
        txtPorcentagemJanssen = new javax.swing.JTextField();
        txtPorcentagemModerna = new javax.swing.JTextField();
        painelPorcentagemVacinados = new javax.swing.JPanel();
        btnVoltarPainelPorcentagemVacinados = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        lblTitulo1PainelPorcentagemVacinados = new javax.swing.JLabel();
        lblIconeHomem = new javax.swing.JLabel();
        lblIconeMulher = new javax.swing.JLabel();
        txtPorcentagemHomens = new javax.swing.JTextField();
        txtPorcentagemMulheres = new javax.swing.JTextField();
        lblTitulo2PainelPorcentagemVacinados = new javax.swing.JLabel();
        painelDosesAplicadas = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblTitulo1PainelDosesAplicadas = new javax.swing.JLabel();
        lblSubTitulo1PainelDosesAplicadas = new javax.swing.JLabel();
        lblSubTitulo2PainelDosesAplicadas = new javax.swing.JLabel();
        lblReacaoSomenteNaPrimeira = new javax.swing.JLabel();
        lblReacaoSomenteNaSegunda = new javax.swing.JLabel();
        lblReacaiEmAmbas = new javax.swing.JLabel();
        lblReacaoEmNenhuma = new javax.swing.JLabel();
        lblPrimeiraDose = new javax.swing.JLabel();
        lblAmbasAsDoses = new javax.swing.JLabel();
        txtPorcentagemPrimeiraDose = new javax.swing.JTextField();
        txtPorcentagemAmbasAsDoses = new javax.swing.JTextField();
        txtPorcentagemSomenteNaPrimeira = new javax.swing.JTextField();
        txtPorcentagemSomenteNaSegunda = new javax.swing.JTextField();
        txtPorcentagemEmAmbasAsDoses = new javax.swing.JTextField();
        txtPorcentagemEmNenhumaDose = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblTitulo2PainelDosesAplicadas = new javax.swing.JLabel();
        btnVoltarPainelDosesAplicadas = new javax.swing.JButton();
        painelFaixaEtaria = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblTitulo1PainelFaixaEtaria = new javax.swing.JLabel();
        lblFaixa1 = new javax.swing.JLabel();
        lblFaixa2 = new javax.swing.JLabel();
        lblFaixa3 = new javax.swing.JLabel();
        lblFaixa4 = new javax.swing.JLabel();
        txtPorcentagemFaixa1 = new javax.swing.JTextField();
        txtPorcentagemFaixa2 = new javax.swing.JTextField();
        txtPorcentagemFaixa4 = new javax.swing.JTextField();
        txtPorcentagemFaixa3 = new javax.swing.JTextField();
        lblTitulo2PainelFaixaEtaria = new javax.swing.JLabel();
        lblTitulo3PainelFaixaEtaria = new javax.swing.JLabel();
        btnVoltarPainelFaixaEtaria = new javax.swing.JButton();

        jLabel51.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(0, 0, 0));
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("%");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 128, 129));
        setPreferredSize(new java.awt.Dimension(990, 900));
        setResizable(false);

        painelPrincipal.setBackground(new java.awt.Color(0, 128, 129));
        painelPrincipal.setPreferredSize(new java.awt.Dimension(964, 900));

        painelOptions.setBackground(new java.awt.Color(47, 79, 78));
        painelOptions.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        painelOptions.setFocusable(false);
        painelOptions.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCadastro.setBackground(new java.awt.Color(204, 204, 204));
        btnCadastro.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnCadastro.setForeground(new java.awt.Color(0, 0, 0));
        btnCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cadastro.png"))); // NOI18N
        btnCadastro.setFocusable(false);
        btnCadastro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCadastro.setOpaque(false);
        btnCadastro.setRequestFocusEnabled(false);
        btnCadastro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCadastroMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCadastroMouseExited(evt);
            }
        });
        btnCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroActionPerformed(evt);
            }
        });
        painelOptions.add(btnCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 180, 60));

        btnReacoes.setBackground(new java.awt.Color(204, 204, 204));
        btnReacoes.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnReacoes.setForeground(new java.awt.Color(0, 0, 0));
        btnReacoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/reaçoes.png"))); // NOI18N
        btnReacoes.setFocusable(false);
        btnReacoes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReacoes.setOpaque(false);
        btnReacoes.setRequestFocusEnabled(false);
        btnReacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReacoesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReacoesMouseExited(evt);
            }
        });
        btnReacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReacoesActionPerformed(evt);
            }
        });
        painelOptions.add(btnReacoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 180, 60));

        btnVacinas.setBackground(new java.awt.Color(204, 204, 204));
        btnVacinas.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnVacinas.setForeground(new java.awt.Color(0, 0, 0));
        btnVacinas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vacinas.png"))); // NOI18N
        btnVacinas.setFocusable(false);
        btnVacinas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVacinas.setOpaque(false);
        btnVacinas.setRequestFocusEnabled(false);
        btnVacinas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVacinasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVacinasMouseExited(evt);
            }
        });
        btnVacinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVacinasActionPerformed(evt);
            }
        });
        painelOptions.add(btnVacinas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 180, 60));

        btnPorcentagemVacinados.setBackground(new java.awt.Color(204, 204, 204));
        btnPorcentagemVacinados.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnPorcentagemVacinados.setForeground(new java.awt.Color(0, 0, 0));
        btnPorcentagemVacinados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/porcentagemVacinados.png"))); // NOI18N
        btnPorcentagemVacinados.setFocusable(false);
        btnPorcentagemVacinados.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPorcentagemVacinados.setOpaque(false);
        btnPorcentagemVacinados.setRequestFocusEnabled(false);
        btnPorcentagemVacinados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPorcentagemVacinadosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPorcentagemVacinadosMouseExited(evt);
            }
        });
        btnPorcentagemVacinados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPorcentagemVacinadosActionPerformed(evt);
            }
        });
        painelOptions.add(btnPorcentagemVacinados, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 530, 180, 60));

        btnDosesAplicadas.setBackground(new java.awt.Color(204, 204, 204));
        btnDosesAplicadas.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnDosesAplicadas.setForeground(new java.awt.Color(0, 0, 0));
        btnDosesAplicadas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dosesAplicadas.png"))); // NOI18N
        btnDosesAplicadas.setFocusable(false);
        btnDosesAplicadas.setOpaque(false);
        btnDosesAplicadas.setRequestFocusEnabled(false);
        btnDosesAplicadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDosesAplicadasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDosesAplicadasMouseExited(evt);
            }
        });
        btnDosesAplicadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDosesAplicadasActionPerformed(evt);
            }
        });
        painelOptions.add(btnDosesAplicadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 620, 180, 60));

        btnFaixaEtaria.setBackground(new java.awt.Color(204, 204, 204));
        btnFaixaEtaria.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnFaixaEtaria.setForeground(new java.awt.Color(0, 0, 0));
        btnFaixaEtaria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/faixaEtaria.png"))); // NOI18N
        btnFaixaEtaria.setFocusable(false);
        btnFaixaEtaria.setOpaque(false);
        btnFaixaEtaria.setRequestFocusEnabled(false);
        btnFaixaEtaria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFaixaEtariaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFaixaEtariaMouseExited(evt);
            }
        });
        btnFaixaEtaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFaixaEtariaActionPerformed(evt);
            }
        });
        painelOptions.add(btnFaixaEtaria, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 710, 180, 60));

        logoMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/LOGO2.png"))); // NOI18N
        logoMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        painelOptions.add(logoMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 200, 200));

        btnAvancar.setBackground(new java.awt.Color(47, 79, 78));
        btnAvancar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaAvancar1 .png"))); // NOI18N
        btnAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarActionPerformed(evt);
            }
        });
        painelOptions.add(btnAvancar, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 8, 36, -1));

        lblIconeZeGotas.setIcon(new javax.swing.ImageIcon("E:\\Bruce\\Materiais Faculdade\\projeto-sistema-de-monitoramento-de-reacoes-pos-vacina-covid19\\src\\images\\ze-gotinha-500x800.png")); // NOI18N
        lblIconeZeGotas.setText("icone");

        lblTituloPrincipal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloPrincipal.setIcon(new javax.swing.ImageIcon("E:\\Bruce\\Materiais Faculdade\\projeto-sistema-de-monitoramento-de-reacoes-pos-vacina-covid19\\src\\images\\banner3.png")); // NOI18N
        lblTituloPrincipal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblIconeAntiCovid.setIcon(new javax.swing.ImageIcon("E:\\Bruce\\Materiais Faculdade\\projeto-sistema-de-monitoramento-de-reacoes-pos-vacina-covid19\\src\\images\\antiCovid.png")); // NOI18N

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addComponent(painelOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelPrincipalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(lblTituloPrincipal)
                        .addContainerGap())
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(lblIconeAntiCovid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIconeZeGotas, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTituloPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIconeAntiCovid, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconeZeGotas, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        painelAreaCadastro.setBackground(new java.awt.Color(0, 128, 129));
        painelAreaCadastro.setBorder(null);
        painelAreaCadastro.setForeground(new java.awt.Color(0, 0, 0));
        painelAreaCadastro.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        painelAreaCadastro.setColumnHeaderView(null);
        painelAreaCadastro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        painelAreaCadastro.setPreferredSize(new java.awt.Dimension(964, 900));

        painelInformacoesCadastro.setBackground(new java.awt.Color(0, 128, 129));
        painelInformacoesCadastro.setForeground(new java.awt.Color(0, 128, 129));
        painelInformacoesCadastro.setPreferredSize(new java.awt.Dimension(964, 1060));
        painelInformacoesCadastro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel.setBackground(new java.awt.Color(47, 79, 78));
        jPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel.setPreferredSize(new java.awt.Dimension(964, 993));

        lblNomeUsuario.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblNomeUsuario.setForeground(java.awt.Color.white);
        lblNomeUsuario.setText("Nome:");

        lblIdadeUsuario.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblIdadeUsuario.setForeground(java.awt.Color.white);
        lblIdadeUsuario.setText("Idade:");

        lblSexoUsuario.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblSexoUsuario.setForeground(java.awt.Color.white);
        lblSexoUsuario.setText("Sexo:");

        txtNomeUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        txtIdadeUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        grupoRadSexo.add(radMasculino);
        radMasculino.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radMasculino.setForeground(java.awt.Color.white);
        radMasculino.setSelected(true);
        radMasculino.setText("Masculino");
        radMasculino.setFocusable(false);

        grupoRadSexo.add(radFeminino);
        radFeminino.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radFeminino.setForeground(java.awt.Color.white);
        radFeminino.setText("Feminino");
        radFeminino.setFocusable(false);
        radFeminino.setPreferredSize(new java.awt.Dimension(104, 28));

        lblBairroUsuario.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblBairroUsuario.setForeground(java.awt.Color.white);
        lblBairroUsuario.setText("Bairro:");

        txtBairro.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        lblVacinaAplicada.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblVacinaAplicada.setForeground(java.awt.Color.white);
        lblVacinaAplicada.setText("Vacina Aplicada:");

        grupoRadVacinas.add(radCoronavac);
        radCoronavac.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radCoronavac.setForeground(java.awt.Color.white);
        radCoronavac.setText("CORONAVAC");
        radCoronavac.setFocusable(false);

        grupoRadVacinas.add(radAstrazeneca);
        radAstrazeneca.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radAstrazeneca.setForeground(java.awt.Color.white);
        radAstrazeneca.setText("ASTRAZENECA");
        radAstrazeneca.setFocusable(false);

        grupoRadVacinas.add(radPfizer);
        radPfizer.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radPfizer.setForeground(java.awt.Color.white);
        radPfizer.setText("PFIZER");
        radPfizer.setFocusable(false);

        grupoRadVacinas.add(radSputnik);
        radSputnik.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radSputnik.setForeground(java.awt.Color.white);
        radSputnik.setText("SPUTNIK");
        radSputnik.setFocusable(false);

        grupoRadVacinas.add(radJanssen);
        radJanssen.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radJanssen.setForeground(java.awt.Color.white);
        radJanssen.setText("JANSENN");
        radJanssen.setFocusable(false);

        grupoRadVacinas.add(radModerna);
        radModerna.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radModerna.setForeground(java.awt.Color.white);
        radModerna.setText("MODERNA");
        radModerna.setFocusable(false);

        lblReacoes.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblReacoes.setForeground(java.awt.Color.white);
        lblReacoes.setText("Reações:");

        radFebre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radFebre.setForeground(java.awt.Color.white);
        radFebre.setText("Febre");
        radFebre.setFocusable(false);

        radCalafrio.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radCalafrio.setForeground(java.awt.Color.white);
        radCalafrio.setText("Calafrios");
        radCalafrio.setFocusable(false);

        radDoresNoCorpo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radDoresNoCorpo.setForeground(java.awt.Color.white);
        radDoresNoCorpo.setText("Dores no Corpo");
        radDoresNoCorpo.setFocusable(false);

        radDorDeCabeca.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radDorDeCabeca.setForeground(java.awt.Color.white);
        radDorDeCabeca.setText("Dor de cabeça");
        radDorDeCabeca.setFocusable(false);

        radFadiga.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radFadiga.setForeground(java.awt.Color.white);
        radFadiga.setText("Fadiga");
        radFadiga.setFocusable(false);

        radFaltaDeAr.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radFaltaDeAr.setForeground(java.awt.Color.white);
        radFaltaDeAr.setText("Falta de ar");
        radFaltaDeAr.setFocusable(false);

        grupoRadReacoes.add(radReacoesTodas);
        radReacoesTodas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radReacoesTodas.setForeground(java.awt.Color.white);
        radReacoesTodas.setText("Todas");
        radReacoesTodas.setFocusable(false);
        radReacoesTodas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radReacoesTodasMouseClicked(evt);
            }
        });

        grupoRadReacoes.add(radReacoesNenhuma);
        radReacoesNenhuma.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radReacoesNenhuma.setForeground(java.awt.Color.white);
        radReacoesNenhuma.setText("Nenhuma");
        radReacoesNenhuma.setFocusable(false);
        radReacoesNenhuma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radReacoesNenhumaMouseClicked(evt);
            }
        });

        btnSalvarDados.setBackground(new java.awt.Color(153, 153, 153));
        btnSalvarDados.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        btnSalvarDados.setText("Salvar");
        btnSalvarDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalvarDadosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalvarDadosMouseExited(evt);
            }
        });
        btnSalvarDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarDadosActionPerformed(evt);
            }
        });

        lblQtdDosesTomadas.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblQtdDosesTomadas.setForeground(java.awt.Color.white);
        lblQtdDosesTomadas.setText("Quantidade de doses tomadas:");

        grupoQtdDosesTomadas.add(radDosesUma);
        radDosesUma.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radDosesUma.setForeground(java.awt.Color.white);
        radDosesUma.setText("Uma");
        radDosesUma.setFocusable(false);

        grupoQtdDosesTomadas.add(radDosesDuas);
        radDosesDuas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radDosesDuas.setForeground(java.awt.Color.white);
        radDosesDuas.setText("Duas");
        radDosesDuas.setFocusable(false);

        lblEmQualDoseTeveReacao.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblEmQualDoseTeveReacao.setForeground(java.awt.Color.white);
        lblEmQualDoseTeveReacao.setText("Em qual dose teve reação:");

        grupoQualDoseSofreuReacao.add(radQualDosePrimeiraApenas);
        radQualDosePrimeiraApenas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radQualDosePrimeiraApenas.setForeground(java.awt.Color.white);
        radQualDosePrimeiraApenas.setText("Primeira");
        radQualDosePrimeiraApenas.setFocusable(false);

        grupoQualDoseSofreuReacao.add(radQualDoseSegundaApenas);
        radQualDoseSegundaApenas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radQualDoseSegundaApenas.setForeground(java.awt.Color.white);
        radQualDoseSegundaApenas.setText("Segunda");
        radQualDoseSegundaApenas.setFocusable(false);

        grupoQualDoseSofreuReacao.add(radQualDoseAmbasDoses);
        radQualDoseAmbasDoses.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radQualDoseAmbasDoses.setForeground(java.awt.Color.white);
        radQualDoseAmbasDoses.setText("Ambas as doses");
        radQualDoseAmbasDoses.setFocusable(false);

        grupoQualDoseSofreuReacao.add(radQualDoseNenhuma);
        radQualDoseNenhuma.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        radQualDoseNenhuma.setForeground(java.awt.Color.white);
        radQualDoseNenhuma.setText("Nenhuma");
        radQualDoseNenhuma.setFocusable(false);

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(btnSalvarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQtdDosesTomadas)
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(radDosesUma)
                                .addComponent(lblReacoes))
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblVacinaAplicada)
                                    .addComponent(lblIdadeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(radAstrazeneca)
                                                .addComponent(radCoronavac)
                                                .addComponent(radPfizer, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(radModerna, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(radJanssen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(radSputnik, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLayout.createSequentialGroup()
                                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblBairroUsuario)
                                                .addComponent(lblSexoUsuario))
                                            .addGap(18, 18, 18)
                                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(radMasculino)
                                                .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(radFeminino, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelLayout.createSequentialGroup()
                                    .addComponent(lblNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27)
                                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtIdadeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                                        .addComponent(txtNomeUsuario))))))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radFebre)
                                    .addComponent(radCalafrio)
                                    .addComponent(radDoresNoCorpo)
                                    .addComponent(radReacoesTodas))
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radFaltaDeAr)
                                            .addComponent(radReacoesNenhuma)))
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addGap(84, 84, 84)
                                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radFadiga)
                                            .addComponent(radDorDeCabeca)
                                            .addComponent(radDosesDuas)))))
                            .addComponent(lblEmQualDoseTeveReacao)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radQualDosePrimeiraApenas)
                                    .addComponent(radQualDoseAmbasDoses))
                                .addGap(78, 78, 78)
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radQualDoseSegundaApenas)
                                    .addComponent(radQualDoseNenhuma))))))
                .addGap(0, 31, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeUsuario)
                    .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdadeUsuario)
                    .addComponent(txtIdadeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radFeminino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radMasculino)
                    .addComponent(lblSexoUsuario))
                .addGap(31, 31, 31)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBairroUsuario)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(lblVacinaAplicada)
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(radCoronavac)
                        .addGap(12, 12, 12)
                        .addComponent(radAstrazeneca)
                        .addGap(12, 12, 12)
                        .addComponent(radPfizer))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(radSputnik)
                        .addGap(12, 12, 12)
                        .addComponent(radJanssen)
                        .addGap(12, 12, 12)
                        .addComponent(radModerna)))
                .addGap(35, 35, 35)
                .addComponent(lblQtdDosesTomadas)
                .addGap(28, 28, 28)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radDosesUma)
                    .addComponent(radDosesDuas))
                .addGap(30, 30, 30)
                .addComponent(lblReacoes)
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radFebre)
                    .addComponent(radDorDeCabeca))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radCalafrio)
                    .addComponent(radFadiga))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radDoresNoCorpo)
                    .addComponent(radFaltaDeAr))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radReacoesTodas)
                    .addComponent(radReacoesNenhuma))
                .addGap(35, 35, 35)
                .addComponent(lblEmQualDoseTeveReacao)
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radQualDoseSegundaApenas)
                    .addComponent(radQualDosePrimeiraApenas))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radQualDoseAmbasDoses)
                    .addComponent(radQualDoseNenhuma))
                .addGap(40, 40, 40)
                .addComponent(btnSalvarDados, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );

        painelInformacoesCadastro.add(jPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(222, 0, 515, 1060));

        btnVoltarAreaCadastro.setBackground(new java.awt.Color(47, 79, 78));
        btnVoltarAreaCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaVoltar1 .png"))); // NOI18N
        btnVoltarAreaCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarAreaCadastroActionPerformed(evt);
            }
        });
        painelInformacoesCadastro.add(btnVoltarAreaCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 36, -1));

        painelAreaCadastro.setViewportView(painelInformacoesCadastro);

        painelReacoes.setBackground(new java.awt.Color(0, 128, 129));
        painelReacoes.setPreferredSize(new java.awt.Dimension(990, 900));
        painelReacoes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(47, 79, 78));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel2.setPreferredSize(new java.awt.Dimension(515, 1040));

        lblTituloPainelReacoes.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTituloPainelReacoes.setForeground(java.awt.Color.white);
        lblTituloPainelReacoes.setText("Estatísticas de reações:");

        lblFebre.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblFebre.setForeground(java.awt.Color.white);
        lblFebre.setText("Febre:");

        lblCalafrio.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblCalafrio.setForeground(java.awt.Color.white);
        lblCalafrio.setText("Calafrios:");

        lblDorNoCorpo.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblDorNoCorpo.setForeground(java.awt.Color.white);
        lblDorNoCorpo.setText("Dores no corpo:");

        lblDorDeCabeca.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblDorDeCabeca.setForeground(java.awt.Color.white);
        lblDorDeCabeca.setText("Dor de cabeça:");

        lblFadiga.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblFadiga.setForeground(java.awt.Color.white);
        lblFadiga.setText("Fadiga:");

        lblFaltaDeAr.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblFaltaDeAr.setForeground(java.awt.Color.white);
        lblFaltaDeAr.setText("Falta de ar:");

        txtPorcentFebre.setEditable(false);
        txtPorcentFebre.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentFebre.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentFebre.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentFebre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentFebre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentCalafrio.setEditable(false);
        txtPorcentCalafrio.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentCalafrio.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentCalafrio.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentCalafrio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentCalafrio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentDorNoCorpo.setEditable(false);
        txtPorcentDorNoCorpo.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentDorNoCorpo.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentDorNoCorpo.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentDorNoCorpo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentDorNoCorpo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentDorDeCabeca.setEditable(false);
        txtPorcentDorDeCabeca.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentDorDeCabeca.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentDorDeCabeca.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentDorDeCabeca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentDorDeCabeca.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentFadiga.setEditable(false);
        txtPorcentFadiga.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentFadiga.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentFadiga.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentFadiga.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentFadiga.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentFaltaDeAr.setEditable(false);
        txtPorcentFaltaDeAr.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentFaltaDeAr.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentFaltaDeAr.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentFaltaDeAr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentFaltaDeAr.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFebre)
                            .addComponent(lblCalafrio)
                            .addComponent(lblDorNoCorpo)
                            .addComponent(lblDorDeCabeca)
                            .addComponent(lblFadiga)
                            .addComponent(lblFaltaDeAr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPorcentFebre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentCalafrio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentDorNoCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentDorDeCabeca, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentFadiga, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentFaltaDeAr, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblTituloPainelReacoes))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(lblTituloPainelReacoes)
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFebre)
                    .addComponent(txtPorcentFebre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCalafrio)
                    .addComponent(txtPorcentCalafrio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDorNoCorpo)
                    .addComponent(txtPorcentDorNoCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDorDeCabeca)
                    .addComponent(txtPorcentDorDeCabeca, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFadiga)
                    .addComponent(txtPorcentFadiga, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFaltaDeAr)
                    .addComponent(txtPorcentFaltaDeAr, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        painelReacoes.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 0, -1, 900));

        btnVoltarPainelReacoes.setBackground(new java.awt.Color(47, 79, 78));
        btnVoltarPainelReacoes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaVoltar1 .png"))); // NOI18N
        btnVoltarPainelReacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarPainelReacoesActionPerformed(evt);
            }
        });
        painelReacoes.add(btnVoltarPainelReacoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 36, -1));

        painelVacinas.setBackground(new java.awt.Color(0, 128, 129));
        painelVacinas.setPreferredSize(new java.awt.Dimension(990, 900));
        painelVacinas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVoltarPainelVacinas.setBackground(new java.awt.Color(47, 79, 78));
        btnVoltarPainelVacinas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaVoltar1 .png"))); // NOI18N
        btnVoltarPainelVacinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarPainelVacinasActionPerformed(evt);
            }
        });
        painelVacinas.add(btnVoltarPainelVacinas, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 36, -1));

        jPanel1.setBackground(new java.awt.Color(47, 79, 78));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setPreferredSize(new java.awt.Dimension(515, 1004));

        lblTituloPainelVacinas.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTituloPainelVacinas.setForeground(java.awt.Color.white);
        lblTituloPainelVacinas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloPainelVacinas.setText("<html>Vacinas disponíveis e porcentagem  de vacinados:</html>");
        lblTituloPainelVacinas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCoronavac.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblCoronavac.setForeground(java.awt.Color.white);
        lblCoronavac.setText("Coronavac:");

        lblAstrazeneca.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblAstrazeneca.setForeground(java.awt.Color.white);
        lblAstrazeneca.setText("Astrazeneca:");

        lblPfizer.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblPfizer.setForeground(java.awt.Color.white);
        lblPfizer.setText("Pfizer:");

        lblSputnik.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblSputnik.setForeground(java.awt.Color.white);
        lblSputnik.setText("Sputnik:");

        lblJanssen.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblJanssen.setForeground(java.awt.Color.white);
        lblJanssen.setText("Janssen:");

        lblModerna.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblModerna.setForeground(java.awt.Color.white);
        lblModerna.setText("Moderna:");

        txtPorcentagemCoronavac.setEditable(false);
        txtPorcentagemCoronavac.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentagemCoronavac.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemCoronavac.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentagemCoronavac.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemCoronavac.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemAstrazeneca.setEditable(false);
        txtPorcentagemAstrazeneca.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentagemAstrazeneca.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemAstrazeneca.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentagemAstrazeneca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemAstrazeneca.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemPfizer.setEditable(false);
        txtPorcentagemPfizer.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentagemPfizer.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemPfizer.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentagemPfizer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemPfizer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemSputnik.setEditable(false);
        txtPorcentagemSputnik.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentagemSputnik.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemSputnik.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentagemSputnik.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemSputnik.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemJanssen.setEditable(false);
        txtPorcentagemJanssen.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentagemJanssen.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemJanssen.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentagemJanssen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemJanssen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemModerna.setEditable(false);
        txtPorcentagemModerna.setBackground(new java.awt.Color(255, 255, 255));
        txtPorcentagemModerna.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemModerna.setForeground(new java.awt.Color(255, 0, 0));
        txtPorcentagemModerna.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemModerna.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblTituloPainelVacinas, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblJanssen)
                                    .addComponent(lblModerna))
                                .addGap(178, 178, 178))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblAstrazeneca)
                                .addGap(111, 111, 111))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCoronavac)
                                .addGap(143, 143, 143))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSputnik)
                                    .addComponent(lblPfizer))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPorcentagemCoronavac)
                            .addComponent(txtPorcentagemAstrazeneca)
                            .addComponent(txtPorcentagemPfizer)
                            .addComponent(txtPorcentagemSputnik)
                            .addComponent(txtPorcentagemJanssen)
                            .addComponent(txtPorcentagemModerna, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lblTituloPainelVacinas, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCoronavac)
                    .addComponent(txtPorcentagemCoronavac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAstrazeneca)
                    .addComponent(txtPorcentagemAstrazeneca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPfizer)
                    .addComponent(txtPorcentagemPfizer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSputnik)
                    .addComponent(txtPorcentagemSputnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblJanssen)
                    .addComponent(txtPorcentagemJanssen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModerna)
                    .addComponent(txtPorcentagemModerna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(117, Short.MAX_VALUE))
        );

        painelVacinas.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 0, -1, 900));

        painelPorcentagemVacinados.setBackground(new java.awt.Color(0, 128, 129));
        painelPorcentagemVacinados.setPreferredSize(new java.awt.Dimension(990, 900));
        painelPorcentagemVacinados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnVoltarPainelPorcentagemVacinados.setBackground(new java.awt.Color(47, 79, 78));
        btnVoltarPainelPorcentagemVacinados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaVoltar1 .png"))); // NOI18N
        btnVoltarPainelPorcentagemVacinados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarPainelPorcentagemVacinadosActionPerformed(evt);
            }
        });
        painelPorcentagemVacinados.add(btnVoltarPainelPorcentagemVacinados, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 36, -1));

        jPanel6.setBackground(new java.awt.Color(47, 79, 78));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel6.setPreferredSize(new java.awt.Dimension(515, 1004));

        lblTitulo1PainelPorcentagemVacinados.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblTitulo1PainelPorcentagemVacinados.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo1PainelPorcentagemVacinados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo1PainelPorcentagemVacinados.setText("Porcentagem de Vacinados\n");
        lblTitulo1PainelPorcentagemVacinados.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblIconeHomem.setBackground(new java.awt.Color(131, 182, 219));
        lblIconeHomem.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblIconeHomem.setForeground(new java.awt.Color(0, 0, 0));
        lblIconeHomem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconeHomem.setText("<html>Homens:</html>");
        lblIconeHomem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblIconeHomem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblIconeHomem.setOpaque(true);
        lblIconeHomem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblIconeMulher.setBackground(new java.awt.Color(229, 169, 198));
        lblIconeMulher.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblIconeMulher.setForeground(new java.awt.Color(0, 0, 0));
        lblIconeMulher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconeMulher.setText("Mulheres:");
        lblIconeMulher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        lblIconeMulher.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblIconeMulher.setOpaque(true);
        lblIconeMulher.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        txtPorcentagemHomens.setEditable(false);
        txtPorcentagemHomens.setBackground(java.awt.Color.white);
        txtPorcentagemHomens.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentagemHomens.setForeground(java.awt.Color.red);
        txtPorcentagemHomens.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemHomens.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemMulheres.setEditable(false);
        txtPorcentagemMulheres.setBackground(java.awt.Color.white);
        txtPorcentagemMulheres.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        txtPorcentagemMulheres.setForeground(java.awt.Color.red);
        txtPorcentagemMulheres.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemMulheres.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblTitulo2PainelPorcentagemVacinados.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        lblTitulo2PainelPorcentagemVacinados.setForeground(java.awt.Color.white);
        lblTitulo2PainelPorcentagemVacinados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo2PainelPorcentagemVacinados.setText("em relação ao sexo");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(lblIconeHomem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(lblIconeMulher, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(txtPorcentagemHomens, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(txtPorcentagemMulheres, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblTitulo2PainelPorcentagemVacinados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(9, 9, 9))
                            .addComponent(lblTitulo1PainelPorcentagemVacinados, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(lblTitulo1PainelPorcentagemVacinados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitulo2PainelPorcentagemVacinados)
                .addGap(72, 72, 72)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIconeHomem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconeMulher, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPorcentagemHomens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcentagemMulheres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        painelPorcentagemVacinados.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 0, -1, 900));

        painelDosesAplicadas.setBackground(new java.awt.Color(0, 128, 129));
        painelDosesAplicadas.setPreferredSize(new java.awt.Dimension(990, 900));
        painelDosesAplicadas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(47, 79, 78));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel4.setPreferredSize(new java.awt.Dimension(515, 1004));

        lblTitulo1PainelDosesAplicadas.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTitulo1PainelDosesAplicadas.setForeground(java.awt.Color.white);
        lblTitulo1PainelDosesAplicadas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo1PainelDosesAplicadas.setText("Dados em relação\n");

        lblSubTitulo1PainelDosesAplicadas.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblSubTitulo1PainelDosesAplicadas.setForeground(java.awt.Color.white);
        lblSubTitulo1PainelDosesAplicadas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitulo1PainelDosesAplicadas.setText("<html>Porcentagem dos vacinados de acordo com a <br> dose tomada:</html>");
        lblSubTitulo1PainelDosesAplicadas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblSubTitulo2PainelDosesAplicadas.setFont(new java.awt.Font("Arial Black", 1, 28)); // NOI18N
        lblSubTitulo2PainelDosesAplicadas.setForeground(java.awt.Color.white);
        lblSubTitulo2PainelDosesAplicadas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubTitulo2PainelDosesAplicadas.setText("<html>Porcentagem das reações de acordo com a dose  tomada:</html>");
        lblSubTitulo2PainelDosesAplicadas.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblReacaoSomenteNaPrimeira.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblReacaoSomenteNaPrimeira.setForeground(java.awt.Color.white);
        lblReacaoSomenteNaPrimeira.setText("Somente na primeira:");

        lblReacaoSomenteNaSegunda.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblReacaoSomenteNaSegunda.setForeground(java.awt.Color.white);
        lblReacaoSomenteNaSegunda.setText("Somente na segunda:");

        lblReacaiEmAmbas.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblReacaiEmAmbas.setForeground(java.awt.Color.white);
        lblReacaiEmAmbas.setText("Em ambas as doses:");

        lblReacaoEmNenhuma.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblReacaoEmNenhuma.setForeground(java.awt.Color.white);
        lblReacaoEmNenhuma.setText("Em nenhuma das doses:");

        lblPrimeiraDose.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblPrimeiraDose.setForeground(java.awt.Color.white);
        lblPrimeiraDose.setText("Primeira dose:");

        lblAmbasAsDoses.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblAmbasAsDoses.setForeground(java.awt.Color.white);
        lblAmbasAsDoses.setText("Primeira e segunda:");

        txtPorcentagemPrimeiraDose.setEditable(false);
        txtPorcentagemPrimeiraDose.setBackground(java.awt.Color.white);
        txtPorcentagemPrimeiraDose.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        txtPorcentagemPrimeiraDose.setForeground(java.awt.Color.red);
        txtPorcentagemPrimeiraDose.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemPrimeiraDose.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemAmbasAsDoses.setEditable(false);
        txtPorcentagemAmbasAsDoses.setBackground(java.awt.Color.white);
        txtPorcentagemAmbasAsDoses.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        txtPorcentagemAmbasAsDoses.setForeground(java.awt.Color.red);
        txtPorcentagemAmbasAsDoses.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemAmbasAsDoses.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemSomenteNaPrimeira.setEditable(false);
        txtPorcentagemSomenteNaPrimeira.setBackground(java.awt.Color.white);
        txtPorcentagemSomenteNaPrimeira.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        txtPorcentagemSomenteNaPrimeira.setForeground(java.awt.Color.red);
        txtPorcentagemSomenteNaPrimeira.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemSomenteNaPrimeira.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemSomenteNaSegunda.setEditable(false);
        txtPorcentagemSomenteNaSegunda.setBackground(java.awt.Color.white);
        txtPorcentagemSomenteNaSegunda.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        txtPorcentagemSomenteNaSegunda.setForeground(java.awt.Color.red);
        txtPorcentagemSomenteNaSegunda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemSomenteNaSegunda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemEmAmbasAsDoses.setEditable(false);
        txtPorcentagemEmAmbasAsDoses.setBackground(java.awt.Color.white);
        txtPorcentagemEmAmbasAsDoses.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        txtPorcentagemEmAmbasAsDoses.setForeground(java.awt.Color.red);
        txtPorcentagemEmAmbasAsDoses.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemEmAmbasAsDoses.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemEmNenhumaDose.setEditable(false);
        txtPorcentagemEmNenhumaDose.setBackground(java.awt.Color.white);
        txtPorcentagemEmNenhumaDose.setFont(new java.awt.Font("Dialog", 1, 26)); // NOI18N
        txtPorcentagemEmNenhumaDose.setForeground(java.awt.Color.red);
        txtPorcentagemEmNenhumaDose.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemEmNenhumaDose.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOpaque(true);

        lblTitulo2PainelDosesAplicadas.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTitulo2PainelDosesAplicadas.setForeground(java.awt.Color.white);
        lblTitulo2PainelDosesAplicadas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo2PainelDosesAplicadas.setText("às doses aplicadas");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitulo1PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblReacaoSomenteNaPrimeira)
                            .addComponent(lblReacaiEmAmbas)
                            .addComponent(lblReacaoSomenteNaSegunda)
                            .addComponent(lblReacaoEmNenhuma)
                            .addComponent(lblPrimeiraDose)
                            .addComponent(lblAmbasAsDoses)
                            .addComponent(lblSubTitulo1PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSubTitulo2PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(380, 380, 380)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPorcentagemPrimeiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPorcentagemAmbasAsDoses, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPorcentagemEmNenhumaDose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(txtPorcentagemEmAmbasAsDoses, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtPorcentagemSomenteNaSegunda, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtPorcentagemSomenteNaPrimeira, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitulo2PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo1PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitulo2PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(lblSubTitulo1PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrimeiraDose)
                    .addComponent(txtPorcentagemPrimeiraDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAmbasAsDoses)
                    .addComponent(txtPorcentagemAmbasAsDoses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSubTitulo2PainelDosesAplicadas, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReacaoSomenteNaPrimeira)
                    .addComponent(txtPorcentagemSomenteNaPrimeira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReacaoSomenteNaSegunda)
                    .addComponent(txtPorcentagemSomenteNaSegunda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReacaiEmAmbas)
                    .addComponent(txtPorcentagemEmAmbasAsDoses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReacaoEmNenhuma)
                    .addComponent(txtPorcentagemEmNenhumaDose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        painelDosesAplicadas.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 0, 540, -1));

        btnVoltarPainelDosesAplicadas.setBackground(new java.awt.Color(47, 79, 78));
        btnVoltarPainelDosesAplicadas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaVoltar1 .png"))); // NOI18N
        btnVoltarPainelDosesAplicadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarPainelDosesAplicadasActionPerformed(evt);
            }
        });
        painelDosesAplicadas.add(btnVoltarPainelDosesAplicadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 36, -1));

        painelFaixaEtaria.setBackground(new java.awt.Color(0, 128, 129));
        painelFaixaEtaria.setPreferredSize(new java.awt.Dimension(990, 900));
        painelFaixaEtaria.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(47, 79, 78));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel5.setPreferredSize(new java.awt.Dimension(515, 1004));

        lblTitulo1PainelFaixaEtaria.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTitulo1PainelFaixaEtaria.setForeground(java.awt.Color.white);
        lblTitulo1PainelFaixaEtaria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo1PainelFaixaEtaria.setText("Porcentagem de reações\n");

        lblFaixa1.setBackground(new java.awt.Color(175, 108, 108));
        lblFaixa1.setFont(new java.awt.Font("Arial Black", 1, 27)); // NOI18N
        lblFaixa1.setForeground(java.awt.Color.black);
        lblFaixa1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFaixa1.setText("12 a 17");
        lblFaixa1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblFaixa1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFaixa1.setOpaque(true);
        lblFaixa1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblFaixa2.setBackground(new java.awt.Color(65, 92, 132));
        lblFaixa2.setFont(new java.awt.Font("Arial Black", 1, 27)); // NOI18N
        lblFaixa2.setForeground(java.awt.Color.white);
        lblFaixa2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFaixa2.setText("18 a 30");
        lblFaixa2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblFaixa2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFaixa2.setOpaque(true);
        lblFaixa2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblFaixa3.setBackground(new java.awt.Color(65, 92, 132));
        lblFaixa3.setFont(new java.awt.Font("Arial Black", 1, 27)); // NOI18N
        lblFaixa3.setForeground(java.awt.Color.white);
        lblFaixa3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFaixa3.setText("31 a 55");
        lblFaixa3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblFaixa3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFaixa3.setOpaque(true);
        lblFaixa3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        lblFaixa4.setBackground(new java.awt.Color(175, 108, 108));
        lblFaixa4.setFont(new java.awt.Font("Arial Black", 1, 27)); // NOI18N
        lblFaixa4.setForeground(java.awt.Color.black);
        lblFaixa4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFaixa4.setText("Acima de 55");
        lblFaixa4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblFaixa4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFaixa4.setOpaque(true);
        lblFaixa4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        txtPorcentagemFaixa1.setEditable(false);
        txtPorcentagemFaixa1.setBackground(java.awt.Color.white);
        txtPorcentagemFaixa1.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemFaixa1.setForeground(java.awt.Color.red);
        txtPorcentagemFaixa1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemFaixa1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemFaixa2.setEditable(false);
        txtPorcentagemFaixa2.setBackground(java.awt.Color.white);
        txtPorcentagemFaixa2.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemFaixa2.setForeground(java.awt.Color.red);
        txtPorcentagemFaixa2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemFaixa2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemFaixa4.setEditable(false);
        txtPorcentagemFaixa4.setBackground(java.awt.Color.white);
        txtPorcentagemFaixa4.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemFaixa4.setForeground(java.awt.Color.red);
        txtPorcentagemFaixa4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemFaixa4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        txtPorcentagemFaixa3.setEditable(false);
        txtPorcentagemFaixa3.setBackground(java.awt.Color.white);
        txtPorcentagemFaixa3.setFont(new java.awt.Font("Dialog", 1, 28)); // NOI18N
        txtPorcentagemFaixa3.setForeground(java.awt.Color.red);
        txtPorcentagemFaixa3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPorcentagemFaixa3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblTitulo2PainelFaixaEtaria.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTitulo2PainelFaixaEtaria.setForeground(java.awt.Color.white);
        lblTitulo2PainelFaixaEtaria.setText("Pós vacina com base ");

        lblTitulo3PainelFaixaEtaria.setFont(new java.awt.Font("Arial Black", 1, 35)); // NOI18N
        lblTitulo3PainelFaixaEtaria.setForeground(java.awt.Color.white);
        lblTitulo3PainelFaixaEtaria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo3PainelFaixaEtaria.setText("na idade");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblTitulo1PainelFaixaEtaria, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblTitulo2PainelFaixaEtaria))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblTitulo3PainelFaixaEtaria, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblFaixa1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(lblFaixa2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(txtPorcentagemFaixa1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(txtPorcentagemFaixa2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblFaixa3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(lblFaixa4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(txtPorcentagemFaixa3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(txtPorcentagemFaixa4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblTitulo1PainelFaixaEtaria)
                .addGap(0, 0, 0)
                .addComponent(lblTitulo2PainelFaixaEtaria, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lblTitulo3PainelFaixaEtaria, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFaixa1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFaixa2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPorcentagemFaixa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcentagemFaixa2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFaixa3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFaixa4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPorcentagemFaixa3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPorcentagemFaixa4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        painelFaixaEtaria.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 0, -1, 900));

        btnVoltarPainelFaixaEtaria.setBackground(new java.awt.Color(47, 79, 78));
        btnVoltarPainelFaixaEtaria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/setaVoltar1 .png"))); // NOI18N
        btnVoltarPainelFaixaEtaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarPainelFaixaEtariaActionPerformed(evt);
            }
        });
        painelFaixaEtaria.add(btnVoltarPainelFaixaEtaria, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 36, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(painelAreaCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(painelReacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGap(0, 3, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(painelVacinas, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGap(0, 3, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(painelPorcentagemVacinados, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGap(0, 3, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(painelDosesAplicadas, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGap(0, 3, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 3, Short.MAX_VALUE)
                    .addComponent(painelFaixaEtaria, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGap(0, 3, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 44, Short.MAX_VALUE)
                    .addComponent(painelAreaCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, 932, Short.MAX_VALUE)
                    .addGap(0, 44, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(painelReacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(painelVacinas, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(painelPorcentagemVacinados, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(painelDosesAplicadas, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(painelFaixaEtaria, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroActionPerformed
        
        ocultarTodasAsPaginas();
        desativaVariaveisDasPaginas();
        
        painelAreaCadastroIsActive = true;
        painelAreaCadastro.setVisible(true);
        
        
    }//GEN-LAST:event_btnCadastroActionPerformed
    
    public Pessoa cadastrarUsuarioNaoVacinado(String nome, char sexo, String bairro, int idade){
           Pessoa usuario = new Pessoa();
           
           usuario.setNome(nome);
           usuario.setSexo(sexo);
           usuario.setIdade(idade);
           usuario.setBairro(bairro);
           usuario.setVacinaTomada(null);
           usuario.setReacoesSofridas("Nenhuma");
           usuario.setQtdDosesTomadas(0);
           usuario.setQtdReacoesSofridas(0);
           usuario.setQualDoseSofreuReacao("Nenhuma");
           usuario.setVacinado(false);
           
           return usuario;
    }   
    
    public void apagarInputs(){
        
        txtNomeUsuario.setText("");
        txtIdadeUsuario.setText("");
        txtIdadeUsuario.setText("");
        txtBairro.setText("");
        
        radAstrazeneca.setSelected(false);
        radCoronavac.setSelected(false);
        radPfizer.setSelected(false);
        radSputnik.setSelected(false);
        radJanssen.setSelected(false);
        radModerna.setSelected(false);
        
        radDosesUma.setSelected(true);
        radDosesDuas.setSelected(false);
        
        radFebre.setSelected(false);
        radCalafrio.setSelected(false);
        radDoresNoCorpo.setSelected(false);
        radDorDeCabeca.setSelected(false);
        radFadiga.setSelected(false);
        radFaltaDeAr.setSelected(false);
        
        // desativar os radios que possuem grupos
        
        grupoQtdDosesTomadas.clearSelection();
        grupoQualDoseSofreuReacao.clearSelection();
        grupoRadReacoes.clearSelection();
        grupoRadSexo.clearSelection();
        grupoRadVacinas.clearSelection();
    }     
    
    private void btnAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarActionPerformed
        
        if(painelAreaCadastroIsActive){ 
            
            painelPrincipal.setVisible(false);
            painelAreaCadastro.setVisible(true);
        
        } else if(painelReacoesIsActive){
            
            painelPrincipal.setVisible(false);
            painelReacoes.setVisible(true);
        
        } else if(painelVacinasIsActive){
            
            painelPrincipal.setVisible(false);
            painelVacinas.setVisible(true);
            
        } else if(painelPorcentagemVacinadosIsActive){
            
            painelPrincipal.setVisible(false);
            painelPorcentagemVacinados.setVisible(true);
            
        } else if(painelDosesAplicadasIsActive){
            
            painelPrincipal.setVisible(false);
            painelDosesAplicadas.setVisible(true);
        
        } else if(painelFaixaEtariaIsActive){
            
            painelPrincipal.setVisible(false);
            painelFaixaEtaria.setVisible(true);
            
        }
    }//GEN-LAST:event_btnAvancarActionPerformed

    private void btnCadastroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastroMouseEntered
          mudarCorBotaoAoEntrarDoMouse(btnCadastro);
    }//GEN-LAST:event_btnCadastroMouseEntered

    private void btnCadastroMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadastroMouseExited
          mudarCorBotaoAoSairDoMouse(btnCadastro);
    }//GEN-LAST:event_btnCadastroMouseExited

    private void btnReacoesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReacoesMouseEntered
        mudarCorBotaoAoEntrarDoMouse(btnReacoes);
    }//GEN-LAST:event_btnReacoesMouseEntered

    private void btnReacoesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReacoesMouseExited
        mudarCorBotaoAoSairDoMouse(btnReacoes);
    }//GEN-LAST:event_btnReacoesMouseExited

    private void btnVacinasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVacinasMouseEntered
        mudarCorBotaoAoEntrarDoMouse(btnVacinas);
    }//GEN-LAST:event_btnVacinasMouseEntered

    private void btnVacinasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVacinasMouseExited
        mudarCorBotaoAoSairDoMouse(btnVacinas);
    }//GEN-LAST:event_btnVacinasMouseExited

    private void btnPorcentagemVacinadosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPorcentagemVacinadosMouseEntered
        mudarCorBotaoAoEntrarDoMouse(btnPorcentagemVacinados);
    }//GEN-LAST:event_btnPorcentagemVacinadosMouseEntered

    private void btnPorcentagemVacinadosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPorcentagemVacinadosMouseExited
        mudarCorBotaoAoSairDoMouse(btnPorcentagemVacinados);
    }//GEN-LAST:event_btnPorcentagemVacinadosMouseExited

    private void btnDosesAplicadasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDosesAplicadasMouseEntered
        mudarCorBotaoAoEntrarDoMouse(btnDosesAplicadas);
    }//GEN-LAST:event_btnDosesAplicadasMouseEntered

    private void btnDosesAplicadasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDosesAplicadasMouseExited
        mudarCorBotaoAoSairDoMouse(btnDosesAplicadas);
    }//GEN-LAST:event_btnDosesAplicadasMouseExited

    private void btnFaixaEtariaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFaixaEtariaMouseEntered
        mudarCorBotaoAoEntrarDoMouse(btnFaixaEtaria);
    }//GEN-LAST:event_btnFaixaEtariaMouseEntered

    private void btnFaixaEtariaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFaixaEtariaMouseExited
        mudarCorBotaoAoSairDoMouse(btnFaixaEtaria);
    }//GEN-LAST:event_btnFaixaEtariaMouseExited

    private void radReacoesTodasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radReacoesTodasMouseClicked
            
           qtdCliquesRadReacoesTodas++;
               
               // as vezes buga por causa da selecao
            
           if(qtdCliquesRadReacoesTodas % 2 == 0){
               
               grupoRadReacoes.clearSelection();
               
               radFebre.setSelected(false);
               radCalafrio.setSelected(false);
               radDorDeCabeca.setSelected(false);
               radDoresNoCorpo.setSelected(false);
               radFadiga.setSelected(false);
               radFaltaDeAr.setSelected(false);     
               
           } else {
               
               radFebre.setSelected(true);
               radCalafrio.setSelected(true);
               radDorDeCabeca.setSelected(true);
               radDoresNoCorpo.setSelected(true);
               radFadiga.setSelected(true);
               radFaltaDeAr.setSelected(true);
               
           }  

    }//GEN-LAST:event_radReacoesTodasMouseClicked

    private void radReacoesNenhumaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radReacoesNenhumaMouseClicked
            
           qtdCliquesRadReacoesNenhuma++;
               
               // as vezes buga por causa da selecao
            
           if(qtdCliquesRadReacoesNenhuma % 2 == 0 && radReacoesNenhuma.isSelected()){
               
               grupoQualDoseSofreuReacao.clearSelection();
               grupoRadReacoes.clearSelection();
               
               
           } else {
               
               // ativa em qual dose sofreu reacao
               radQualDoseNenhuma.setSelected(true);
               
               // oculta opcoes
               radFebre.setSelected(false);
               radCalafrio.setSelected(false);
               radDorDeCabeca.setSelected(false);
               radDoresNoCorpo.setSelected(false);
               radFadiga.setSelected(false);
               radFaltaDeAr.setSelected(false);
               
           }        

    }//GEN-LAST:event_radReacoesNenhumaMouseClicked

    private void btnSalvarDadosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarDadosMouseEntered
        mudarCorBotaoAoEntrarDoMouse(btnSalvarDados);
    }//GEN-LAST:event_btnSalvarDadosMouseEntered

    private void btnSalvarDadosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarDadosMouseExited
        mudarCorBotaoAoSairDoMouse(btnSalvarDados);
    }//GEN-LAST:event_btnSalvarDadosMouseExited

    private void btnVoltarAreaCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarAreaCadastroActionPerformed
           voltarPagina();
    }//GEN-LAST:event_btnVoltarAreaCadastroActionPerformed

    private void btnSalvarDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarDadosActionPerformed
        ConnectionFactory conexao = new ConnectionFactory();
        conexao.conectar();
        
        
        //Controller c = new Controller();
        
        Dose primeira = conexao.localizarDose("Primeira");
        Dose segunda = conexao.localizarDose("Segunda");
        
        int qtdDadosPreenchidos = 0;
        
        try{  
            
            Pessoa usuario = new Pessoa();
            boolean dadosPreenchidosDeVacinados = true;
            boolean dadosPreenchidosDeNaoVacinados = true;
            
            boolean nomePreenchido = true;
            boolean idadePreenchido = true;
            boolean sexoPreenchido = true;
            boolean bairroPreenchido = true;
            boolean vacinaPreenchido = true;
            boolean qtdDosesPreenchido = true;
            boolean reacoesPreenchido = true;
            boolean emQualDoseTeveReacaoPreenchido = true;
                        
            String reacoesSofridas = "";  
            
            int qtdReacoesSofridas = 0;
            Vacina vacinaTomada = null;
            
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados && dadosPreenchidosDeNaoVacinados){
            
            // nome
            
            if(txtNomeUsuario.getText().length() != 0){
                
                usuario.setNome(txtNomeUsuario.getText());
                qtdDadosPreenchidos++;
                
            } else {
                
                nomePreenchido = false;
                
            }
            
            
            } else {
                
                dadosPreenchidosDeVacinados = false;
                dadosPreenchidosDeNaoVacinados = false;
                
            }
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados && dadosPreenchidosDeNaoVacinados){
                
                
            // idade
            if(txtIdadeUsuario.getText().length() != 0){
                
                usuario.setIdade(Integer.parseInt(txtIdadeUsuario.getText()));
                qtdDadosPreenchidos++;
                
            } else {
                
                idadePreenchido = false;
                
            }
            
            
            }  else {
                
                dadosPreenchidosDeVacinados = false;
                dadosPreenchidosDeNaoVacinados = false;
                
            }
            
            
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados && dadosPreenchidosDeNaoVacinados){
                
            
            
            
            // bairro
            if(txtBairro.getText().length() != 0){
                
                usuario.setBairro(txtBairro.getText());
                qtdDadosPreenchidos++;
                
            } else {
                
                bairroPreenchido = false;
                
            }
            
            
            } else {
                
                dadosPreenchidosDeVacinados = false;
                dadosPreenchidosDeNaoVacinados = false;
                
            }
            
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados || dadosPreenchidosDeNaoVacinados){
            
            
            
            // sexo
            if(radMasculino.isSelected()){
                usuario.setSexo('M');
                qtdDadosPreenchidos++;
            } else if(radFeminino.isSelected()){
                usuario.setSexo('F');
                qtdDadosPreenchidos++;
            } else {
                sexoPreenchido = false;
            }
            
            
            } else {
                
                dadosPreenchidosDeVacinados = false;
                dadosPreenchidosDeNaoVacinados = false;
                
            }
            
            // a partir daqui alteraremos os dados somente dos vacinados
            
            
            
            
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados){
            
            
            
            // vacina tomada
            
            
                
            if(radAstrazeneca.isSelected()){
                
                vacinaTomada = conexao.localizarVacina("Astrazeneca");
                usuario.setVacinaTomada(vacinaTomada);
                
                vacinaTomada.setQtdPessoasQueSeVacinou(vacinaTomada.getQtdPessoasQueSeVacinou()+1);
                qtdDadosPreenchidos++;                
                
            } else if(radCoronavac.isSelected()){
                
                vacinaTomada = conexao.localizarVacina("Coronavac");
                usuario.setVacinaTomada(vacinaTomada);
                vacinaTomada.setQtdPessoasQueSeVacinou(vacinaTomada.getQtdPessoasQueSeVacinou()+1);
                qtdDadosPreenchidos++;
                
            } else if(radPfizer.isSelected()){
                
                vacinaTomada = conexao.localizarVacina("Pfizer");
                usuario.setVacinaTomada(vacinaTomada);
                vacinaTomada.setQtdPessoasQueSeVacinou(vacinaTomada.getQtdPessoasQueSeVacinou()+1);
                qtdDadosPreenchidos++;
                
            } else if(radSputnik.isSelected()){
                
                vacinaTomada = conexao.localizarVacina("Sputnik");
                usuario.setVacinaTomada(vacinaTomada);
                vacinaTomada.setQtdPessoasQueSeVacinou(vacinaTomada.getQtdPessoasQueSeVacinou()+1); 
                qtdDadosPreenchidos++;
                
            } else if(radJanssen.isSelected()){
                
                vacinaTomada = conexao.localizarVacina("Janssen");
                usuario.setVacinaTomada(vacinaTomada);
                vacinaTomada.setQtdPessoasQueSeVacinou(vacinaTomada.getQtdPessoasQueSeVacinou()+1); 
                qtdDadosPreenchidos++;
                
            } else if(radModerna.isSelected()){
                
                vacinaTomada = conexao.localizarVacina("Moderna");
                usuario.setVacinaTomada(vacinaTomada);
                vacinaTomada.setQtdPessoasQueSeVacinou(vacinaTomada.getQtdPessoasQueSeVacinou()+1);     
                qtdDadosPreenchidos++;
                
            } else {
                
                vacinaPreenchido = false;
                
            }
            
            
            } else {
                
                dadosPreenchidosDeVacinados = false;
                
            }
            
            
            
            
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados){
            
            
            // qtd doses tomadas e qual dose tomou
                
                
            if(radDosesUma.isSelected()){
                
                usuario.setQtdDosesTomadas(1);
                primeira.setQtdDosesAplicadas(primeira.getQtdDosesAplicadas()+1);
                
                
                conexao.atualizarDados("update doses set qtdDosesAplicadas = '"+primeira.getQtdDosesAplicadas()
                        +"' where id = '1' ");
                
                qtdDadosPreenchidos++;
                
                
            } else if(radDosesDuas.isSelected()){
                
                usuario.setQtdDosesTomadas(2);
                
                primeira.setQtdDosesAplicadas(primeira.getQtdDosesAplicadas()+1);
                segunda.setQtdDosesAplicadas(segunda.getQtdDosesAplicadas()+1);
                
                
                conexao.atualizarDados("update doses set qtdDosesAplicadas = '"+
                primeira.getQtdDosesAplicadas()+"' where id = '1'");
                
                conexao.atualizarDados("update doses set qtdDosesAplicadas = '"+
                segunda.getQtdDosesAplicadas()+"' where id = '2'");
                
                qtdDadosPreenchidos++;
                
                
            } else {
                
                qtdDosesPreenchido = false;
                
            }
            
            
            }  else {
                
                dadosPreenchidosDeVacinados = false;
                
            }
            
            
            
            

            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados) {
            
            
            
            // reacoes
            
            
            // para verificar quais botoes estao selecionados
            boolean radFebreActive = false;
            boolean radCalafrioActive = false;
            boolean radDorNoCorpoActive = false;
            boolean radNauseaActive = false;
            boolean radFadigaActive = false;
            boolean radFaltaDeArActive = false;
            boolean radTodos = false;
            boolean radNenhuma = false;
            
            
                
            if(radFebre.isSelected()){
                
                radFebreActive = true;
                
                reacoesSofridas += "| Febre";
                qtdReacoesSofridas++;
                c.incrementarQuantidadeReacoes(1);
                
            } 
            
            
            if(radCalafrio.isSelected()){
                
                radCalafrioActive = true;
                
                reacoesSofridas += "| Calafrio";
                qtdReacoesSofridas++;
                c.incrementarQuantidadeReacoes(2);
                                
            } 
            
            
            if(radDoresNoCorpo.isSelected()){
                
                radDorNoCorpoActive = true;
                
                reacoesSofridas += "| Dor no corpo";
                qtdReacoesSofridas++;
                c.incrementarQuantidadeReacoes(3);
                
            } 
            
            
            if(radDorDeCabeca.isSelected()){
                
                radNauseaActive = true;
                
                reacoesSofridas += "| Náuseas ou dores de cabeça";
                qtdReacoesSofridas++;
                c.incrementarQuantidadeReacoes(4);
                
            } 
            
            
            
            if(radFadiga.isSelected()){
                
                radFadigaActive = true;
                
                reacoesSofridas += "| Fadiga";
                qtdReacoesSofridas++;
                c.incrementarQuantidadeReacoes(5);
                
            } 
            
            if(radFaltaDeAr.isSelected()){
                
                radFaltaDeArActive = true;
                
                reacoesSofridas += "| Falta de ar";
                qtdReacoesSofridas++;
                c.incrementarQuantidadeReacoes(6);
                
            } 
            
            
            if(radReacoesTodas.isSelected()){
                
                radTodos = true;
                
                reacoesSofridas = "| Febre| Calafrio| Dor no corpo| Náuseas ou dores de cabeça| Fadiga| Falta de ar";
                c.incrementarQuantidadeReacoes(1);            
                c.incrementarQuantidadeReacoes(2);            
                c.incrementarQuantidadeReacoes(3);            
                c.incrementarQuantidadeReacoes(4);            
                c.incrementarQuantidadeReacoes(5);            
                c.incrementarQuantidadeReacoes(6);
                qtdReacoesSofridas = 6;
                
            } 
            
            
            if(radReacoesNenhuma.isSelected()){
                
                radNenhuma = true;
                radQualDoseNenhuma.setSelected(true); // se reacao for nenhuma, entao, em qual dose tb será
                
                reacoesSofridas = "Nenhuma";
                qtdReacoesSofridas = 0;
                
            }
            
            // ultima verificacao
            if(radCalafrioActive || radDorNoCorpoActive || radFadigaActive
                || radFaltaDeArActive || radFebreActive || radNauseaActive
                    || radTodos || radNenhuma){
                
                
                reacoesPreenchido = true;
                qtdDadosPreenchidos++;
                
            } else {
                
                reacoesPreenchido = false;
                
            }
            
            
                usuario.setQtdReacoesSofridas(qtdReacoesSofridas);
                usuario.setReacoesSofridas(reacoesSofridas);
            

            }  else {
                
                dadosPreenchidosDeVacinados = false;
                
            }
            
            
            
            
            
            // so permite as alteracoes enquanto for true
            if(dadosPreenchidosDeVacinados){
            
            
            // qual dose sofreu reacao e incrementa

            
            if(radQualDosePrimeiraApenas.isSelected()){
                
                 usuario.setQualDoseSofreuReacao("Primeira");
                 
                 primeira.setQuantidadeDeUsuariosQueSofreramReacao(primeira.getQuantidadeDeUsuariosQueSofreramReacao()+1);
                 primeira.setQtdReacoesSomenteNestaDose(primeira.getQtdReacoesSomenteNestaDose()+usuario.getQtdReacoesSofridas());
                 
                 
                conexao.atualizarDados("update doses set qtdDReacoesSomenteNestaDose = '"+
                primeira.getQtdReacoesSomenteNestaDose()+"', qtdUsuariosQueSofreramReacao = '"
                        +primeira.getQuantidadeDeUsuariosQueSofreramReacao()+"' where id = '1' ");
                 
                
                qtdDadosPreenchidos++;
                 
            } else if(radQualDoseSegundaApenas.isSelected()) {
                
                 usuario.setQualDoseSofreuReacao("Segunda");
                 
                 segunda.setQuantidadeDeUsuariosQueSofreramReacao(segunda.getQuantidadeDeUsuariosQueSofreramReacao()+1);
                 segunda.setQtdReacoesSomenteNestaDose(segunda.getQtdReacoesSomenteNestaDose()+usuario.getQtdReacoesSofridas());
                 
                 conexao.atualizarDados("update doses set qtdDReacoesSomenteNestaDose = '"+
                 segunda.getQtdReacoesSomenteNestaDose()+"', qtdUsuariosQueSofreramReacao = '"
                        +segunda.getQuantidadeDeUsuariosQueSofreramReacao()+"' where id = '2' ");
                 
                 qtdDadosPreenchidos++;
                 
                 
            } else if(radQualDoseAmbasDoses.isSelected()){
                
                usuario.setQualDoseSofreuReacao("Primeira e Segunda");
                
                primeira.setQuantidadeDeUsuariosQueSofreramReacao(primeira.getQuantidadeDeUsuariosQueSofreramReacao()+1);
                primeira.setQtdReacoesSomenteNestaDose(primeira.getQtdReacoesSomenteNestaDose()+usuario.getQtdReacoesSofridas());
                
                segunda.setQuantidadeDeUsuariosQueSofreramReacao(segunda.getQuantidadeDeUsuariosQueSofreramReacao()+1);
                segunda.setQtdReacoesSomenteNestaDose(segunda.getQtdReacoesSomenteNestaDose()+usuario.getQtdReacoesSofridas());
                
                
                conexao.atualizarDados("update doses set qtdDReacoesSomenteNestaDose = '"+
                primeira.getQtdReacoesSomenteNestaDose()+"', qtdUsuariosQueSofreramReacao = '"
                        +primeira.getQuantidadeDeUsuariosQueSofreramReacao()+"' where id = '1' ");
                
                conexao.atualizarDados("update doses set qtdDReacoesSomenteNestaDose = '"+
                segunda.getQtdReacoesSomenteNestaDose()+"', qtdUsuariosQueSofreramReacao = '"
                        +segunda.getQuantidadeDeUsuariosQueSofreramReacao()+"' where id = '2' ");
                
                qtdDadosPreenchidos++;
                
                
            } else if(radQualDoseNenhuma.isSelected()){
                
                usuario.setQualDoseSofreuReacao("Nenhuma");
                
                primeira.setQuantidadeDeUsuariosQueSofreramReacao(primeira.getQuantidadeDeUsuariosQueSofreramReacao()+0);
                primeira.setQtdReacoesSomenteNestaDose(primeira.getQtdReacoesSomenteNestaDose() + 0);
                
                segunda.setQuantidadeDeUsuariosQueSofreramReacao(segunda.getQuantidadeDeUsuariosQueSofreramReacao()+ 0);
                segunda.setQtdReacoesSomenteNestaDose(segunda.getQtdReacoesSomenteNestaDose() + 0);
                
                conexao.atualizarDados("update doses set qtdDReacoesSomenteNestaDose = '"+
                primeira.getQtdReacoesSomenteNestaDose()+"', qtdUsuariosQueSofreramReacao = '"
                        +primeira.getQuantidadeDeUsuariosQueSofreramReacao()+"' where id = '1' ");
                
                conexao.atualizarDados("update doses set qtdDReacoesSomenteNestaDose = '"+
                segunda.getQtdReacoesSomenteNestaDose()+"', qtdUsuariosQueSofreramReacao = '"
                +segunda.getQuantidadeDeUsuariosQueSofreramReacao()+"' where id = '2' ");
                
                qtdDadosPreenchidos++;
                
            } else {
                
                emQualDoseTeveReacaoPreenchido = false;
                
            }
            
            } else {
                
                dadosPreenchidosDeVacinados = false;
                
            }           
            
            
            
            if(qtdDadosPreenchidos == 8){ // vacinados 9 = qtd dados a serem preenchidos
                
                
                // atualiza os dados de vacina (qtdMaximoDeReacoes) e no banco atualiza tudo
                
                vacinaTomada.setMaximoReacoesGeradas(vacinaTomada.getMaximoReacoesGeradas()+usuario.getQtdReacoesSofridas());
                
                conexao.atualizarDados("update vacina set qtdDosesAplicadas = '"+vacinaTomada.getQtdPessoasQueSeVacinou()
                +"', maximoReacoesGeradas = '"+vacinaTomada.getMaximoReacoesGeradas()+"' where id = '"+vacinaTomada.getId()+"'");  
                
                
               
               usuario.setVacinado(true);
               users.add(usuario); 
               
               conexao.inserirUsuario(usuario);
               
               
               JOptionPane.showMessageDialog(null,"Cadastro realizado com sucesso!"); 
               apagarInputs();
               conexao.desconectar();
               
               
                
            } else if(qtdDadosPreenchidos == 4){ // nao vacinados
                
               usuario.setVacinado(false);
               
               users.add(cadastrarUsuarioNaoVacinado(usuario.getNome(),usuario.getSexo(),usuario.getBairro(),usuario.getIdade()));
               
               conexao.inserirUsuario(usuario);
               
               JOptionPane.showMessageDialog(null,"Cadastro realizado com sucesso!"); 
               apagarInputs();
               conexao.desconectar();
            
            } else {
                
               JOptionPane.showMessageDialog(null,"Por favor, preencha os campos vazios ou marque as opções restantes!");  
                
            }
            
                usuario = null;
                dadosPreenchidosDeVacinados = true;
                dadosPreenchidosDeNaoVacinados = true;
                
            
    } catch(NumberFormatException e){
               JOptionPane.showMessageDialog(null,"[ERRO]: A idade deve ser preenchida com um número! "+e);
    } catch(Exception e){
               JOptionPane.showMessageDialog(null,"[ERRO]: Ops, algo inesperado aconteceu...reveja se os dados"+
                       " preenchidos são válidos ou se algum campo está vazio e tente novamente"+e); 
               e.printStackTrace();
    }    
            
    
    }//GEN-LAST:event_btnSalvarDadosActionPerformed

    private void btnVoltarPainelReacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarPainelReacoesActionPerformed
        voltarPagina();
    }//GEN-LAST:event_btnVoltarPainelReacoesActionPerformed

    private void btnVoltarPainelVacinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarPainelVacinasActionPerformed
        voltarPagina();
    }//GEN-LAST:event_btnVoltarPainelVacinasActionPerformed

    private void btnVoltarPainelPorcentagemVacinadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarPainelPorcentagemVacinadosActionPerformed
        voltarPagina();
    }//GEN-LAST:event_btnVoltarPainelPorcentagemVacinadosActionPerformed

    private void btnVoltarPainelDosesAplicadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarPainelDosesAplicadasActionPerformed
        voltarPagina();
    }//GEN-LAST:event_btnVoltarPainelDosesAplicadasActionPerformed

    private void btnVoltarPainelFaixaEtariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarPainelFaixaEtariaActionPerformed
        voltarPagina();
    }//GEN-LAST:event_btnVoltarPainelFaixaEtariaActionPerformed
    
    //OK case 1
    private void btnReacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReacoesActionPerformed
        
        ConnectionFactory conexao = new ConnectionFactory();
        conexao.conectar();
        
            ocultarTodasAsPaginas();
            desativaVariaveisDasPaginas();
        
            painelReacoesIsActive = true;
            painelReacoes.setVisible(true);
        
            ListaReacao reactions = conexao.listarReacoes();
            ListaPessoa users = conexao.listarUsuarios();
            
            
            double qtdNaReacaoAtual = 0;
            final double totalDePessoasVacinadas;
            int porcentagemEmCadaReacao = 0;

            System.out.println();
            System.out.println("Estatística de Reações:");
            System.out.println();


            totalDePessoasVacinadas = users.qtdPessoasVacinadas();

            for(NodeReacao n = reactions.getPrim(); n != null; n = n.getProximo()){ 

                // faz o calculo
                qtdNaReacaoAtual = n.getInformacao().getQtdPessoasQueTiveramReacoes();
                porcentagemEmCadaReacao = (int)((qtdNaReacaoAtual/totalDePessoasVacinadas)*100);
                
                if(n.getInformacao().getTipo().equalsIgnoreCase("Febre")){
                    
                    txtPorcentFebre.setText(Integer.toString(porcentagemEmCadaReacao)+"%");
                    
                } else if(n.getInformacao().getTipo().equalsIgnoreCase("Calafrios")){
                    
                    txtPorcentCalafrio.setText(Integer.toString(porcentagemEmCadaReacao)+"%");
                    
                } else if(n.getInformacao().getTipo().equalsIgnoreCase("Dores no corpo")){
                    
                    txtPorcentDorNoCorpo.setText(Integer.toString(porcentagemEmCadaReacao)+"%");
                    
                } else if(n.getInformacao().getTipo().equalsIgnoreCase("Náuseas ou dores de cabeça")){
                    
                    txtPorcentDorDeCabeca.setText(Integer.toString(porcentagemEmCadaReacao)+"%");
                    
                } else if(n.getInformacao().getTipo().equalsIgnoreCase("Fadiga")){
                    
                    txtPorcentFadiga.setText(Integer.toString(porcentagemEmCadaReacao)+"%");
                    
                } else if(n.getInformacao().getTipo().equalsIgnoreCase("Falta de ar")){
                    
                    txtPorcentFaltaDeAr.setText(Integer.toString(porcentagemEmCadaReacao)+"%");
                    
                } else {
                    continue;
                }
   
           }
        
            
        conexao.desconectar();
        
    }//GEN-LAST:event_btnReacoesActionPerformed
    
    //OK case 2
    private void btnVacinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVacinasActionPerformed
        
        ConnectionFactory conexao = new ConnectionFactory();
        conexao.conectar();
        
        ocultarTodasAsPaginas();
        desativaVariaveisDasPaginas();
        
        painelVacinasIsActive = true;
        painelVacinas.setVisible(true);
        
        ListaVacina vacines = conexao.listarVacinas();
        ListaPessoa users = conexao.listarUsuarios();
        
        double totalDePessoasVacinadas = users.qtdPessoasVacinadas();
        double qtdPessoasNaVacinaAtual;
        int porcentagemDePessoasACadaVacina;

        
        System.out.println();
        System.out.println("Vacinas disponíveis e porcentagem de vacinados:");
        System.out.println();

        for(NodeVacina n = vacines.getPrim(); n != null; n = n.getProximo()){

            // faz o calculo
            qtdPessoasNaVacinaAtual = n.getInformacao().getQtdPessoasQueSeVacinou();
            porcentagemDePessoasACadaVacina = (int)((qtdPessoasNaVacinaAtual/totalDePessoasVacinadas)*100);
            
            if(n.getInformacao().getNome().equalsIgnoreCase("Coronavac")){
                
                txtPorcentagemCoronavac.setText(Integer.toString(porcentagemDePessoasACadaVacina)+"%");
                
            } else if(n.getInformacao().getNome().equalsIgnoreCase("Astrazeneca")){
                
                txtPorcentagemAstrazeneca.setText(Integer.toString(porcentagemDePessoasACadaVacina)+"%");
                
            } else if(n.getInformacao().getNome().equalsIgnoreCase("Pfizer")){
                
                txtPorcentagemPfizer.setText(Integer.toString(porcentagemDePessoasACadaVacina)+"%");
                
            } else if(n.getInformacao().getNome().equalsIgnoreCase("Sputnik")){
                
                txtPorcentagemSputnik.setText(Integer.toString(porcentagemDePessoasACadaVacina)+"%");
                
            } else if(n.getInformacao().getNome().equalsIgnoreCase("Janssen")){
                
                txtPorcentagemJanssen.setText(Integer.toString(porcentagemDePessoasACadaVacina)+"%");
                
            } else if(n.getInformacao().getNome().equalsIgnoreCase("Moderna")){
               
                txtPorcentagemModerna.setText(Integer.toString(porcentagemDePessoasACadaVacina)+"%");
                
            }

        }
        
        conexao.desconectar();
    }//GEN-LAST:event_btnVacinasActionPerformed

    //OK case 3
    private void btnPorcentagemVacinadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPorcentagemVacinadosActionPerformed
        
        ConnectionFactory conexao = new ConnectionFactory();
        conexao.conectar();
        
        ocultarTodasAsPaginas();
        desativaVariaveisDasPaginas();
        
        painelPorcentagemVacinadosIsActive = true;
        painelPorcentagemVacinados.setVisible(true);
        
        
        
        ListaPessoa users = conexao.listarUsuarios();
        
        final double totalVacinados = users.qtdPessoasVacinadas(); // independente do sexo
        double homensVacinados = 0;
        double mulheresVacinadas = 0;

        int porcentagemDeHomensVacinados = 0;
        int porcentagemDeMulheresVacinadas = 0;



        // pega a quantidade de acordo com o sexo
        for(NodePessoa n = users.getPrim(); n != null; n = n.getProximo()){
            if(n.getInformacao().getSexo() == 'M' && n.getInformacao().getVacinado()){ // somente os vacinados
                homensVacinados++;
                porcentagemDeHomensVacinados = (int)((homensVacinados/totalVacinados)*100);
            } else if(n.getInformacao().getSexo() == 'F' && n.getInformacao().getVacinado()){
                mulheresVacinadas++;
                porcentagemDeMulheresVacinadas = (int)((mulheresVacinadas/totalVacinados)*100);
            }
        }
                txtPorcentagemHomens.setText(Integer.toString(porcentagemDeHomensVacinados)+"%");
                txtPorcentagemMulheres.setText(Integer.toString(porcentagemDeMulheresVacinadas)+"%");
                
                
        conexao.desconectar();
        
    }//GEN-LAST:event_btnPorcentagemVacinadosActionPerformed

    //Ok case 4
    private void btnDosesAplicadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDosesAplicadasActionPerformed
        
            ConnectionFactory conexao = new ConnectionFactory();
            conexao.conectar();
        
            ocultarTodasAsPaginas();
            desativaVariaveisDasPaginas();
        
            painelDosesAplicadasIsActive = true;
            painelDosesAplicadas.setVisible(true);
        
            
            ListaPessoa users = conexao.listarUsuarios();
        
            double qtdPessoasQueTomaramApenasPrimeiraDose = 0;
            double qtdPessoasQueTomaramDuasDoses = 0;
            double qtdPessoasNaoTomouNenhumaDose = 0;

            double qtdPessoasQueTiveramReacaoSomenteNaPrimeiraDose = 0;
            double qtdPessoasQueTiveramReacaoSomenteNaSegundaDose = 0;
            double qtdPessoasQueNaoTiveramReacaoEmNenhumaDose = 0;
            double qtdPessoasQueTiveramReacaoNasDuasDoses = 0;

            double qtdVacinados = users.qtdPessoasVacinadas();

            int porcentagemPessoasQueTomaramApenasAPrimeiraDose = 0;
            int porcentagemPessoasQueTomaramAsDuasDoses = 0;
            int porcentagemPessoasQueNaoTomaramNenhumaDose = 0;

            int porcentagemQtdReacaoSomenteNaPrimeiraDose = 0;
            int porcentagemQtdReacaoSomenteNaSegundaDose = 0;
            int porcentagemQtdReacaoNasDuasDoses = 0;
            int porcentagemQtdReacaoEmNenhumaDose = 0;


            // coletar dados de acordo com a qtd de doses tomadas:
            for(NodePessoa n = users.getPrim(); n != null; n = n.getProximo()){

                if(n.getInformacao().getQtdDosesTomadas() == 1){ // tomaram só a primeira

                    qtdPessoasQueTomaramApenasPrimeiraDose++;
                    porcentagemPessoasQueTomaramApenasAPrimeiraDose = (int)((qtdPessoasQueTomaramApenasPrimeiraDose/qtdVacinados)*100);

                } else if(n.getInformacao().getQtdDosesTomadas() == 2){ // tomaram as duas doses

                    qtdPessoasQueTomaramDuasDoses++;
                    porcentagemPessoasQueTomaramAsDuasDoses = (int)((qtdPessoasQueTomaramDuasDoses/qtdVacinados)*100);

                } else if(n.getInformacao().getQtdDosesTomadas() == 0){ // nao se vacinou

                    qtdPessoasNaoTomouNenhumaDose++;
                    porcentagemPessoasQueNaoTomaramNenhumaDose = (int)((qtdPessoasNaoTomouNenhumaDose/qtdVacinados)*100);
                    
                }

            }

            // coletar dados de acordo com as reacoes em cada dose
            for(NodePessoa n = users.getPrim(); n != null; n = n.getProximo()){

                if(n.getInformacao().getQualDoseSofreuReacao().equalsIgnoreCase("Primeira")){

                    qtdPessoasQueTiveramReacaoSomenteNaPrimeiraDose++; // somente primeira
                    porcentagemQtdReacaoSomenteNaPrimeiraDose = (int)((qtdPessoasQueTiveramReacaoSomenteNaPrimeiraDose/qtdVacinados)*100);

                } else if(n.getInformacao().getQualDoseSofreuReacao().equalsIgnoreCase("Primeira e Segunda")){

                    qtdPessoasQueTiveramReacaoNasDuasDoses++; // duas doses
                    porcentagemQtdReacaoNasDuasDoses = (int)((qtdPessoasQueTiveramReacaoNasDuasDoses/qtdVacinados)*100);

                } else if(n.getInformacao().getQualDoseSofreuReacao().equalsIgnoreCase("Segunda")){

                    qtdPessoasQueTiveramReacaoSomenteNaSegundaDose++; // somente na segunda
                    porcentagemQtdReacaoSomenteNaSegundaDose = (int)((qtdPessoasQueTiveramReacaoSomenteNaSegundaDose/qtdVacinados)*100);

                } else if(n.getInformacao().getQualDoseSofreuReacao().equalsIgnoreCase("Nenhuma")){

                    qtdPessoasQueNaoTiveramReacaoEmNenhumaDose++; // em nenhuma dose
                    porcentagemQtdReacaoEmNenhumaDose = (int)((qtdPessoasQueNaoTiveramReacaoEmNenhumaDose/qtdVacinados)*100);
                    // fiz em nenhuma dose, mas achei desnecessário mostrar, caso precise, está feito!
                }
            }


            //imprimir os dados

            
            txtPorcentagemPrimeiraDose.setText(Integer.toString(porcentagemPessoasQueTomaramApenasAPrimeiraDose)+"%");
            txtPorcentagemAmbasAsDoses.setText(Integer.toString(porcentagemPessoasQueTomaramAsDuasDoses)+"%");
            
            txtPorcentagemSomenteNaPrimeira.setText(Integer.toString(porcentagemQtdReacaoSomenteNaPrimeiraDose)+"%");
            txtPorcentagemSomenteNaSegunda.setText(Integer.toString(porcentagemQtdReacaoSomenteNaSegundaDose)+"%");
            txtPorcentagemEmAmbasAsDoses.setText(Integer.toString(porcentagemQtdReacaoNasDuasDoses)+"%");
            txtPorcentagemEmNenhumaDose.setText(Integer.toString(porcentagemQtdReacaoEmNenhumaDose)+"%");

        
            conexao.desconectar();
            
    }//GEN-LAST:event_btnDosesAplicadasActionPerformed

    //Ok case 5
    private void btnFaixaEtariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFaixaEtariaActionPerformed
        
        ConnectionFactory conexao = new ConnectionFactory();
        conexao.conectar();
        
        ocultarTodasAsPaginas();
        desativaVariaveisDasPaginas();
        
        painelFaixaEtariaIsActive = true;
        painelFaixaEtaria.setVisible(true);
        
        ListaPessoa users = conexao.listarUsuarios();
        
        
        double faixa1 = 0; // (12 a 17 anos)
        double faixa2 = 0; // (18 a 30 anos)
        double faixa3 = 0; // (31 a 55 anos) 
        double faixa4 = 0; // (56  pra cima)
        
        double totalVacinados = users.qtdPessoasVacinadas();

        int porcentagemFaixa1 = 0;
        int porcentagemFaixa2 = 0;
        int porcentagemFaixa3 = 0;
        int porcentagemFaixa4 = 0;

        for(NodePessoa n = users.getPrim(); n != null; n = n.getProximo()){

            if(!n.getInformacao().getVacinado()){ // ignora quem não foi vacinado

                continue;

            } else if(n.getInformacao().getReacoesSofridas().equalsIgnoreCase("Nenhuma")){ // se foi vacinado mas nao apresentou nenhuma reacao

                continue;

            } else {


                if(n.getInformacao().getIdade() >= 12 && n.getInformacao().getIdade() <= 17){
                    
                    faixa1++;
                    porcentagemFaixa1 = (int)((faixa1/totalVacinados)*100);
                    
                } else if(n.getInformacao().getIdade() <= 30){
                    
                    faixa2++;
                    porcentagemFaixa2 = (int)((faixa2/totalVacinados)*100);
                    
                } else if(n.getInformacao().getIdade() <= 55){
                    
                    faixa3++;
                    porcentagemFaixa3 = (int)((faixa3/totalVacinados)*100);
                    
                } else if(n.getInformacao().getIdade() > 55 && n.getInformacao().getIdade() <= 99) {
                    
                    faixa4++;
                    porcentagemFaixa4 = (int)((faixa4/totalVacinados)*100);
                    
                } else {
                    
                    continue;
                    
                }

            }
        }
                    
                    txtPorcentagemFaixa1.setText(Integer.toString(porcentagemFaixa1)+"%");
                    txtPorcentagemFaixa2.setText(Integer.toString(porcentagemFaixa2)+"%");
                    txtPorcentagemFaixa3.setText(Integer.toString(porcentagemFaixa3)+"%");
                    txtPorcentagemFaixa4.setText(Integer.toString(porcentagemFaixa4)+"%");



        /* 
        
            o calculo n mostra 100 % pq sempre sobra uma
            margem daqueles que não tiveram reação ou
            não se vacinaram
        
        */
        
        conexao.desconectar();
        
    }//GEN-LAST:event_btnFaixaEtariaActionPerformed

    // torna false as variaveis booleanas
    public void desativaVariaveisDasPaginas(){
        painelAreaPrincipalIsActive = false; 
        painelAreaCadastroIsActive = false;
        painelReacoesIsActive = false;
        painelVacinasIsActive = false;
        painelPorcentagemVacinadosIsActive = false;
        painelDosesAplicadasIsActive = false;
        painelFaixaEtariaIsActive = false;
    }
    
    public void ocultarTodasAsPaginas(){
        
        painelPrincipal.setVisible(false);
        painelAreaCadastro.setVisible(false);
        painelReacoes.setVisible(false);
        painelVacinas.setVisible(false);
        painelPorcentagemVacinados.setVisible(false);
        painelDosesAplicadas.setVisible(false);
        painelFaixaEtaria.setVisible(false);  
    
    }
    
    // serve para qualquer page
    public void voltarPagina(){
        
        if(painelAreaCadastroIsActive){
            
            painelPrincipal.setVisible(true);
            painelAreaCadastro.setVisible(false);
            btnAvancar.setVisible(true);
            
        } else if(painelReacoesIsActive){
            
            painelPrincipal.setVisible(true);
            painelReacoes.setVisible(false);
            btnAvancar.setVisible(true);
            
        } else if(painelVacinasIsActive){
            
            painelPrincipal.setVisible(true);
            painelVacinas.setVisible(false);
            btnAvancar.setVisible(true);
        
        } else if(painelPorcentagemVacinadosIsActive){
            
            painelPrincipal.setVisible(true);
            painelPorcentagemVacinados.setVisible(false);
            btnAvancar.setVisible(true);
            
        } else if(painelDosesAplicadasIsActive){
            
            painelPrincipal.setVisible(true);
            painelDosesAplicadas.setVisible(false);
            btnAvancar.setVisible(true);
        
        } else if(painelFaixaEtariaIsActive){
            
            painelPrincipal.setVisible(true);
            painelFaixaEtaria.setVisible(false);
            btnAvancar.setVisible(true);
        
        }
    }
    
    // exclusivamente para a animação dos botoes
    public void mudarCorBotaoAoEntrarDoMouse(JButton btn){
        Color novaCor = new Color(70,113,198,78);    
        btn.setBackground(novaCor);
    }
    
    public void mudarCorBotaoAoSairDoMouse(JButton btn){
            Color padrao = new Color(204,204,204);
            btn.setBackground(padrao);
    }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menuPrincipal().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvancar;
    private javax.swing.JButton btnCadastro;
    private javax.swing.JButton btnDosesAplicadas;
    private javax.swing.JButton btnFaixaEtaria;
    private javax.swing.JButton btnPorcentagemVacinados;
    private javax.swing.JButton btnReacoes;
    private javax.swing.JButton btnSalvarDados;
    private javax.swing.JButton btnVacinas;
    private javax.swing.JButton btnVoltarAreaCadastro;
    private javax.swing.JButton btnVoltarPainelDosesAplicadas;
    private javax.swing.JButton btnVoltarPainelFaixaEtaria;
    private javax.swing.JButton btnVoltarPainelPorcentagemVacinados;
    private javax.swing.JButton btnVoltarPainelReacoes;
    private javax.swing.JButton btnVoltarPainelVacinas;
    private javax.swing.ButtonGroup grupoQtdDosesTomadas;
    private javax.swing.ButtonGroup grupoQualDoseSofreuReacao;
    private javax.swing.ButtonGroup grupoRadReacoes;
    private javax.swing.ButtonGroup grupoRadSexo;
    private javax.swing.ButtonGroup grupoRadVacinas;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAmbasAsDoses;
    private javax.swing.JLabel lblAstrazeneca;
    private javax.swing.JLabel lblBairroUsuario;
    private javax.swing.JLabel lblCalafrio;
    private javax.swing.JLabel lblCoronavac;
    private javax.swing.JLabel lblDorDeCabeca;
    private javax.swing.JLabel lblDorNoCorpo;
    private javax.swing.JLabel lblEmQualDoseTeveReacao;
    private javax.swing.JLabel lblFadiga;
    private javax.swing.JLabel lblFaixa1;
    private javax.swing.JLabel lblFaixa2;
    private javax.swing.JLabel lblFaixa3;
    private javax.swing.JLabel lblFaixa4;
    private javax.swing.JLabel lblFaltaDeAr;
    private javax.swing.JLabel lblFebre;
    private javax.swing.JLabel lblIconeAntiCovid;
    private javax.swing.JLabel lblIconeHomem;
    private javax.swing.JLabel lblIconeMulher;
    private javax.swing.JLabel lblIconeZeGotas;
    private javax.swing.JLabel lblIdadeUsuario;
    private javax.swing.JLabel lblJanssen;
    private javax.swing.JLabel lblModerna;
    private javax.swing.JLabel lblNomeUsuario;
    private javax.swing.JLabel lblPfizer;
    private javax.swing.JLabel lblPrimeiraDose;
    private javax.swing.JLabel lblQtdDosesTomadas;
    private javax.swing.JLabel lblReacaiEmAmbas;
    private javax.swing.JLabel lblReacaoEmNenhuma;
    private javax.swing.JLabel lblReacaoSomenteNaPrimeira;
    private javax.swing.JLabel lblReacaoSomenteNaSegunda;
    private javax.swing.JLabel lblReacoes;
    private javax.swing.JLabel lblSexoUsuario;
    private javax.swing.JLabel lblSputnik;
    private javax.swing.JLabel lblSubTitulo1PainelDosesAplicadas;
    private javax.swing.JLabel lblSubTitulo2PainelDosesAplicadas;
    private javax.swing.JLabel lblTitulo1PainelDosesAplicadas;
    private javax.swing.JLabel lblTitulo1PainelFaixaEtaria;
    private javax.swing.JLabel lblTitulo1PainelPorcentagemVacinados;
    private javax.swing.JLabel lblTitulo2PainelDosesAplicadas;
    private javax.swing.JLabel lblTitulo2PainelFaixaEtaria;
    private javax.swing.JLabel lblTitulo2PainelPorcentagemVacinados;
    private javax.swing.JLabel lblTitulo3PainelFaixaEtaria;
    private javax.swing.JLabel lblTituloPainelReacoes;
    private javax.swing.JLabel lblTituloPainelVacinas;
    private javax.swing.JLabel lblTituloPrincipal;
    private javax.swing.JLabel lblVacinaAplicada;
    private javax.swing.JLabel logoMenu;
    private javax.swing.JScrollPane painelAreaCadastro;
    private javax.swing.JPanel painelDosesAplicadas;
    private javax.swing.JPanel painelFaixaEtaria;
    private javax.swing.JPanel painelInformacoesCadastro;
    private javax.swing.JPanel painelOptions;
    private javax.swing.JPanel painelPorcentagemVacinados;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JPanel painelReacoes;
    private javax.swing.JPanel painelVacinas;
    private javax.swing.JRadioButton radAstrazeneca;
    private javax.swing.JRadioButton radCalafrio;
    private javax.swing.JRadioButton radCoronavac;
    private javax.swing.JRadioButton radDorDeCabeca;
    private javax.swing.JRadioButton radDoresNoCorpo;
    private javax.swing.JRadioButton radDosesDuas;
    private javax.swing.JRadioButton radDosesUma;
    private javax.swing.JRadioButton radFadiga;
    private javax.swing.JRadioButton radFaltaDeAr;
    private javax.swing.JRadioButton radFebre;
    private javax.swing.JRadioButton radFeminino;
    private javax.swing.JRadioButton radJanssen;
    private javax.swing.JRadioButton radMasculino;
    private javax.swing.JRadioButton radModerna;
    private javax.swing.JRadioButton radPfizer;
    private javax.swing.JRadioButton radQualDoseAmbasDoses;
    private javax.swing.JRadioButton radQualDoseNenhuma;
    private javax.swing.JRadioButton radQualDosePrimeiraApenas;
    private javax.swing.JRadioButton radQualDoseSegundaApenas;
    private javax.swing.JRadioButton radReacoesNenhuma;
    private javax.swing.JRadioButton radReacoesTodas;
    private javax.swing.JRadioButton radSputnik;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtIdadeUsuario;
    private javax.swing.JTextField txtNomeUsuario;
    private javax.swing.JTextField txtPorcentCalafrio;
    private javax.swing.JTextField txtPorcentDorDeCabeca;
    private javax.swing.JTextField txtPorcentDorNoCorpo;
    private javax.swing.JTextField txtPorcentFadiga;
    private javax.swing.JTextField txtPorcentFaltaDeAr;
    private javax.swing.JTextField txtPorcentFebre;
    private javax.swing.JTextField txtPorcentagemAmbasAsDoses;
    private javax.swing.JTextField txtPorcentagemAstrazeneca;
    private javax.swing.JTextField txtPorcentagemCoronavac;
    private javax.swing.JTextField txtPorcentagemEmAmbasAsDoses;
    private javax.swing.JTextField txtPorcentagemEmNenhumaDose;
    private javax.swing.JTextField txtPorcentagemFaixa1;
    private javax.swing.JTextField txtPorcentagemFaixa2;
    private javax.swing.JTextField txtPorcentagemFaixa3;
    private javax.swing.JTextField txtPorcentagemFaixa4;
    private javax.swing.JTextField txtPorcentagemHomens;
    private javax.swing.JTextField txtPorcentagemJanssen;
    private javax.swing.JTextField txtPorcentagemModerna;
    private javax.swing.JTextField txtPorcentagemMulheres;
    private javax.swing.JTextField txtPorcentagemPfizer;
    private javax.swing.JTextField txtPorcentagemPrimeiraDose;
    private javax.swing.JTextField txtPorcentagemSomenteNaPrimeira;
    private javax.swing.JTextField txtPorcentagemSomenteNaSegunda;
    private javax.swing.JTextField txtPorcentagemSputnik;
    // End of variables declaration//GEN-END:variables
}
